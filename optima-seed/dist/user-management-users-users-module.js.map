{"version":3,"sources":["./src/app/user-management/activate-user/activate-user.component.ts","./src/app/user-management/activate-user/activate-user.component.html","./src/app/service/subscription.service.ts","./src/app/user-management/add-user/add-user.component.ts","./src/app/user-management/add-user/add-user.component.html","./src/app/user-management/users-routing/users-routing.module.ts","./src/app/user-management/users/users.module.ts","./src/app/user-management/list-subs/list-subs.component.ts","./src/app/user-management/list-subs/list-subs.component.html","./src/app/user-management/add-subs/add-subs.component.ts","./src/app/user-management/add-subs/add-subs.component.html","./src/app/service/users.service.ts","./src/app/user-management/update-users/update-users.component.ts","./src/app/user-management/update-users/update-users.component.html","./src/app/user-management/list-users/list-users.component.ts","./src/app/user-management/list-users/list-users.component.html","./src/app/auth.guard.ts"],"names":[],"mappings":"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","file":"user-management-users-users-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SubscriptionService } from 'app/service/subscription.service';\nimport { UsersService } from 'app/service/users.service';\nimport { User } from 'app/_model/user';\n\n@Component({\n  selector: 'app-activate-user',\n  templateUrl: './activate-user.component.html',\n  styleUrls: ['./activate-user.component.css']\n})\nexport class ActivateUserComponent implements OnInit {\n\n  selectedSub = null;\n  message = '';\n\n  submitted = false;\n  //\n  phone = 0;\n  password = '';\n  company = '';\n  //\n  users: any;\n  //\n  selectedUser: User = null;\n  currentIndex = -1;\n  //\n  user: User = {\n  id: '',\n  username: '',\n  firstName: '',\n  lastName: '',\n  email: '',\n  enabled: true,\n  totp: false,\n  emailVerified: false,\n  disableableCredentialTypes: [],\n  requiredActions: [],\n  notBefore: 0,\n  groups: [],\n  credentials: [{ type: '', value: '', temporary: false }],\n  attributes: [new Map<'', ''>()]\n  };\n\n  constructor( private userservice: UsersService,\n               private service: SubscriptionService,\n               private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.message = '';\n    this.viewSub(this.route.snapshot.paramMap.get('id'));\n  }\n\n  viewSub(id): void {\n    this.service.getSubsById(id).subscribe(\n      sub => {\n        this.selectedSub = sub;\n        console.log(sub);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  activateUser(): void {\n    const phone = this.phone;\n    const password = this.password;\n    const company = this.selectedSub.company;\n    const newuser = {\n      username: this.selectedSub.username,\n      enabled: true,\n      totp: false,\n      emailVerified: true,\n      firstName: this.selectedSub.firstName,\n      lastName: this.selectedSub.lastName,\n      email: this.selectedSub.email,\n      notBefore: 0,\n      groups: [this.selectedSub.type],\n      credentials: [{\n        type: 'password',\n        value: password,\n        temporary: false,\n      }],\n      attributes: {Phone : phone, Company : company}\n    };\n    console.log(newuser);\n    this.userservice.addUser(newuser).subscribe(\n      response => {\n        console.log(response);\n        this.submitted = true;\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n}\n","<div style=\"width: 500px; margin: auto;\">\n    <div *ngIf=\"selectedSub\" class=\"edit-form\">\n        <h4>User</h4>\n        <form>\n            <div class=\"form-group\">\n                <label for=\"title\">Username</label>\n                <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"selectedSub.username\" name=\"username\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">First Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"subfirstName\" [(ngModel)]=\"selectedSub.firstName\" name=\"subfirstName\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Last Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"sublastName\" [(ngModel)]=\"selectedSub.lastName\" name=\"sublastName\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input class=\"form-control\" id=\"email\" required [(ngModel)]=\"selectedSub.email\" name=\"email\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input class=\"form-control\" id=\"password\" required [(ngModel)]=\"this.password\" name=\"password\" type=\"password\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phone\">Phone</label>\n                <input class=\"form-control\" id=\"phone\" type=\"phone\" required [(ngModel)]=\"this.phone\" name=\"phone\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phone\">Company</label>\n                <input class=\"form-control\" id=\"company\" required [(ngModel)]=\"selectedSub.company\" name=\"company\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"type\">Type</label>\n                <input class=\"form-control\" id=\"type\" required [(ngModel)]=\"selectedSub.type\" name=\"type\" disabled />\n            </div>\n            <button (click)=\"activateUser()\" class=\"btn btn-success\">Activate</button>\n        </form>\n        <p></p>\n    </div>\n    <div *ngIf=\"submitted\">\n        <h3>You successfully created a user!</h3>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment as env } from 'environments/environment';\nimport { Subscription } from '../_model/subscription';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubscriptionService {\n\n  subsUrl = `${env.api_host}/subscription`;\n\n  constructor(private http: HttpClient) { }\n\n  getSubs(): Observable<any> {\n    return this.http.get<Subscription[]>(`${this.subsUrl}/all`);\n  }\n\n  getSubsById(id): Observable<any> {\n    return this.http.get(`${this.subsUrl}/${id}`);\n  }\n\n  getSubsByType(type): Observable<any> {\n    return this.http.get(`${this.subsUrl}/${type}`);\n  }\n\n  addSubs(sub): Observable<any> {\n    return this.http.post(`${this.subsUrl}/subscribe`, sub);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from 'app/service/users.service';\nimport { User } from 'app/_model/user';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  //\n  submitted = false;\n  //\n  phone = 0;\n  password = '';\n  company = '';\n  //\n  user: User = {\n  id: '',\n  username: '',\n  firstName: '',\n  lastName: '',\n  email: '',\n  enabled: true,\n  totp: false,\n  emailVerified: false,\n  disableableCredentialTypes: [],\n  requiredActions: [],\n  notBefore: 0,\n  groups: [],\n  credentials: [{ type: '', value: '', temporary: false }],\n  attributes: [new Map<'', ''>()]\n  };\n  //\n  constructor(private userservice: UsersService ) { }\n  createUser(): void {\n    const phone = this.phone;\n    const password = this.password;\n    const company = this.company;\n    const newuser = {\n      username: this.user.username,\n      enabled: true,\n      totp: false,\n      emailVerified: true,\n      firstName: this.user.firstName,\n      lastName: this.user.lastName,\n      email: this.user.email,\n      notBefore: 0,\n      groups: [this.user.groups],\n      credentials: [{\n        type: 'password',\n        value: password,\n        temporary: false,\n      }],\n      attributes: {Phone : phone, Company : company}\n    };\n    console.log(newuser);\n    this.userservice.addUser(newuser).subscribe(\n      response => {\n        console.log(response);\n        this.submitted = true;\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"width: 500px; margin: auto;\">\n    <div class=\"submit-form\">\n        <div *ngIf=\"!submitted\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input class=\"form-control\" id=\"username\" required [(ngModel)]=\"user.username\" name=\"username\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"user.firstName\" name=\"firstName\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"user.lastName\" name=\"lastName\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input class=\"form-control\" id=\"email\" required [(ngModel)]=\"user.email\" name=\"email\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input class=\"form-control\" id=\"password\" required [(ngModel)]=\"this.password\" name=\"password\" type=\"password\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phone\">Phone</label>\n                <input class=\"form-control\" id=\"phone\" type=\"phone\" required [(ngModel)]=\"this.phone\" name=\"phone\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"groups\">Type</label>\n                <select id=\"groups\" required [(ngModel)]=\"user.groups\" name=\"groups\"> \n                <option value=\"Clients\">Client</option>\n                <option value=\"Merchants\">Merchant</option>\n                <option value=\"BigMerchants\">Big Merchant</option>\n                <option value=\"BankManagers\">Bank Manager</option>\n                <option value=\"TWAdmins\">Admin</option>\n            </select>\n            </div>\n            <button (click)=\"createUser()\" class=\"btn btn-success\">Create</button>\n        </div>\n\n        <div *ngIf=\"submitted\">\n            <h3>You successfully created a product!</h3>\n        </div>\n    </div>\n</div>","import { Routes } from '@angular/router';\nimport { ListUsersComponent } from '../list-users/list-users.component';\nimport { AuthGuard } from 'app/auth.guard';\nimport { UpdateUsersComponent } from '../update-users/update-users.component';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { ListSubsComponent } from '../list-subs/list-subs.component';\nimport { ActivateUserComponent } from '../activate-user/activate-user.component';\nimport { AddSubsComponent } from '../add-subs/add-subs.component';\n\nexport const UsersRoutes: Routes = [\n  { path: '', redirectTo: 'users', pathMatch: 'full' },\n  { path: 'all', component: ListUsersComponent, canActivate: [AuthGuard], data: { roles: ['Admin']} },\n  { path: 'user/:id', component: UpdateUsersComponent, canActivate: [AuthGuard], data: { roles: ['Admin']} },\n  { path: 'add', component: AddUserComponent, canActivate: [AuthGuard], data: { roles: ['Admin']} },\n  { path: 'pending', component: ListSubsComponent, canActivate: [AuthGuard], data: { roles: ['Admin']} },\n  { path: 'pending/:id', component: ActivateUserComponent, canActivate: [AuthGuard], data: { roles: ['Admin']} },\n  { path: 'subscribe', component: AddSubsComponent },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ActivateUserComponent } from '../activate-user/activate-user.component';\nimport { AddSubsComponent } from '../add-subs/add-subs.component';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { ListSubsComponent } from '../list-subs/list-subs.component';\nimport { ListUsersComponent } from '../list-users/list-users.component';\nimport { UpdateUsersComponent } from '../update-users/update-users.component';\nimport { RouterModule } from '@angular/router';\nimport { UsersRoutes } from '../users-routing/users-routing.module';\nimport { MatListModule } from '@angular/material/list';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    ListUsersComponent,\n    UpdateUsersComponent,\n    AddUserComponent,\n    ListSubsComponent,\n    ActivateUserComponent,\n    AddSubsComponent\n  ],\n  imports: [\n    MatListModule,\n    CommonModule,\n    FormsModule,\n    MatIconModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    RouterModule.forChild(UsersRoutes)\n  ]\n})\nexport class UsersModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SubscriptionService } from 'app/service/subscription.service';\nimport { Subscription } from 'app/_model/subscription';\n\n@Component({\n  selector: 'app-list-subs',\n  templateUrl: './list-subs.component.html',\n  styleUrls: ['./list-subs.component.css']\n})\nexport class ListSubsComponent implements OnInit {\n\n  subs: Subscription[];\n  selectedSub: Subscription = null;\n  currentIndex = -1;\n  //\n  constructor(private service: SubscriptionService) { }\n\n  ngOnInit(): void {\n    this.readSubs();\n  }\n\n  readSubs(): void {\n    this.service.getSubs().subscribe(\n      subs => {\n        this.subs = subs;\n        console.log(subs);\n      },\n      error => {\n        console.log(error);\n    });\n  }\n\n  myDateParser(dateStr: string): string {\n    let year = dateStr.toString().substring(0, 4);\n    let month = dateStr.substring(5, 7);\n    let day = dateStr.substring(8, 10);\n    let validDate = year + '/' + month + '/' + day;\n    return validDate\n  }\n\n  refresh(): void {\n    this.readSubs();\n    this.selectedSub = null;\n    this.currentIndex = -1;\n  }\n\n  selectSub(sub: Subscription, index: number): void {\n    this.selectedSub = sub;\n    this.currentIndex = index;\n  }\n\n}\n","<div style=\"width: 500px; margin: auto;\">\n    <div class=\"container\">\n        <h4>Pending</h4>\n        <button (click)=\"refresh()\" class=\"btn btn-success\">Refresh</button>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let sub of subs; let i = index\" [class.active]=\"i == currentIndex\">\n                <a matLine [routerLink]=\"['/users/pending', sub.id]\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3\">\n                            {{sub.firstName}}\n                        </div>\n                        <div class=\"col-md-3\">\n                            {{sub.lastName}}\n                        </div>\n                        <div class=\"col-md-3\">\n                            {{myDateParser(sub.timestamp)}}\n                        </div>\n                    </div>\n                </a>\n            </mat-list-item>\n        </mat-nav-list>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SubscriptionService } from 'app/service/subscription.service';\nimport { Subscription } from 'app/_model/subscription';\n\n@Component({\n  selector: 'app-add-subs',\n  templateUrl: './add-subs.component.html',\n  styleUrls: ['./add-subs.component.css']\n})\nexport class AddSubsComponent implements OnInit {\n\n  sub: Subscription = {\n    id: null,\n    timestamp: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    type: '',\n    phone : '',\n    company : '',\n    startDate: '',\n    endDate: '',\n  }\n\n  submitted = false;\n\n  constructor(private service: SubscriptionService) { }\n\n  subscribe(): void {\n    const newsub = {\n      timestamp: this.sub.timestamp,\n      firstName: this.sub.firstName,\n      lastName: this.sub.lastName,\n      email: this.sub.email,\n      type: this.sub.type,\n      phone : this.sub.phone,\n      company : this.sub.company,\n      startDate: this.sub.startDate,\n      endDate: this.sub.endDate,\n    };\n    console.log(newsub);\n    this.service.addSubs(newsub).subscribe(\n      response => {\n        console.log(response);\n        this.submitted = true;\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"width: 500px; margin: auto;\">\n    <div class=\"submit-form\">\n        <div *ngIf=\"!submitted\">\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"sub.firstName\" name=\"firstName\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"sub.lastName\" name=\"lastName\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input class=\"form-control\" id=\"email\" required [(ngModel)]=\"sub.email\" name=\"email\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phone\">Phone</label>\n                <input class=\"form-control\" id=\"phone\" type=\"phone\" required [(ngModel)]=\"sub.phone\" name=\"phone\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"groups\">Type</label>\n                <select id=\"groups\" required [(ngModel)]=\"sub.type\" name=\"groups\"> \n                <option value=\"Clients\">Client</option>\n                <option value=\"Merchants\">Merchant</option>\n                <option value=\"BigMerchants\">Big Merchant</option>\n                <option value=\"BankManagers\">Bank Manager</option>\n                <option value=\"TWAdmins\">Admin</option>\n            </select>\n            </div>\n            <button (click)=\"subscribe()\" class=\"btn btn-success\">Subscribe</button>\n        </div>\n\n        <div *ngIf=\"submitted\">\n            <h3>You successfully subscribed!</h3>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment as env } from 'environments/environment';\nimport { User } from '../_model/user';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  usersUrl = `${env.admin_keycloak}/users`;\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.usersUrl);\n  }\n\n  getUserById(id): Observable<any> {\n    return this.http.get(`${this.usersUrl}/${id}`);\n  }\n\n  addUser(user): Observable<any> {\n    return this.http.post(this.usersUrl, user);\n  }\n\n  updateUserById(id, user): Observable<any> {\n    return this.http.put(`${this.usersUrl}/${id}`, user);\n  }\n\n  deleteUserById(id): Observable<any> {\n    return this.http.delete(`${this.usersUrl}/${id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UsersService } from 'app/service/users.service';\n\n@Component({\n  selector: 'app-update-users',\n  templateUrl: './update-users.component.html',\n  styleUrls: ['./update-users.component.css']\n})\nexport class UpdateUsersComponent implements OnInit {\n\n  selectedUser = null;\n  message = '';\n\n  constructor( private userservice: UsersService,\n               private route: ActivatedRoute,\n               private router: Router) {}\n\n  ngOnInit(): void {\n    this.message = '';\n    this.viewUser(this.route.snapshot.paramMap.get('id'));\n  }\n\n  viewUser(id): void {\n    this.userservice.getUserById(id).subscribe(\n      user => {\n        this.selectedUser = user;\n        console.log(user)\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  updateUser(): void {\n    this.userservice.updateUserById(this.selectedUser.id, this.selectedUser)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = 'The user was updated!';\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  deleteUser(): void {\n    this.userservice.deleteUserById(this.selectedUser.id).subscribe(\n      response => {\n        console.log(response);\n        this.router.navigate(['/users/all']);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n}\n","<div style=\"width: 500px; margin: auto;\">\n    <div *ngIf=\"selectedUser\" class=\"edit-form\">\n        <h4>User</h4>\n        <form>\n            <div class=\"form-group\">\n                <label for=\"title\">Username</label>\n                <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"selectedUser.username\" name=\"username\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">First Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"firstName\" [(ngModel)]=\"selectedUser.firstName\" name=\"firstName\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Last Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"lastName\" [(ngModel)]=\"selectedUser.lastName\" name=\"lastName\" />\n            </div>\n        </form>\n        <button type=\"submit\" class=\"badge badge-success\" (click)=\"updateUser()\"> Update </button>\n        <button class=\"badge badge-danger mr-2\" (click)=\"deleteUser()\"> Delete </button>\n        <p></p>\n    </div>\n\n    <div *ngIf=\"!selectedUser\">\n        <br />\n        <p>This user is not accessible</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from 'app/service/users.service';\nimport { User } from 'app/_model/user';\n\n@Component({\n  selector: 'app-list-users',\n  templateUrl: './list-users.component.html',\n  styleUrls: ['./list-users.component.css']\n})\nexport class ListUsersComponent implements OnInit {\n  //\n  users: any;\n  //\n  selectedUser: User = null;\n  currentIndex = -1;\n\n  constructor(private userservice: UsersService ) { }\n  //\n  ngOnInit(): void {\n    this.readUsers();\n  }\n  //\n  readUsers(): void {\n    this.userservice.getUsers().subscribe(\n      users => {\n        this.users = users;\n        console.log(users);\n      },\n      error => {\n        console.log(error);\n    });\n  }\n  //\n  refresh(): void {\n    this.readUsers();\n    this.selectedUser = null;\n    this.currentIndex = -1;\n  }\n  //\n  selectUser(user: User, index: number): void {\n    this.selectedUser = user;\n    this.currentIndex = index;\n  }\n}\n","<div style=\"width: 500px; margin: auto;\">\n    <div class=\"container\">\n        <h4>Users List</h4>\n        <button (click)=\"refresh()\" class=\"btn btn-success\">Refresh</button>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let user of users; let i = index\" [class.active]=\"i == currentIndex\">\n                <a matLine [routerLink]=\"['/users/user', user.id]\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            {{user.username}}\n                        </div>\n                        <div class=\"col-md-6\">\n                            {{user.email}}\n                        </div>\n                    </div>\n                </a>\n            </mat-list-item>\n        </mat-nav-list>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n\n  constructor(\n    protected readonly router: Router,\n    protected readonly keycloak: KeycloakService\n  ) {\n    super(router, keycloak);\n  }\n\n  // tslint:disable-next-line: typedef\n  public async isAccessAllowed(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    // Force the user to log in if currently unauthenticated.\n    if (!this.authenticated) {\n      await this.keycloak.login({\n        redirectUri: window.location.origin + state.url,\n      });\n    }\n\n    // Get the roles required from the route.\n    const requiredRoles = route.data.roles;\n\n    // Allow the user to to proceed if no additional roles are required to access the route.\n    if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n      return true;\n    }\n\n    // Allow the user to proceed if all the required roles are present.\n    return requiredRoles.every((role) => this.roles.includes(role));\n\n  }\n}\n"],"sourceRoot":"webpack:///"}