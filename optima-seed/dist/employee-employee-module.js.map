{"version":3,"sources":["./src/app/employee/employee-routing.module.ts","./src/app/service/employe.service.ts","./src/app/employee/add-employee/add-employee.component.ts","./src/app/employee/add-employee/add-employee.component.html","./src/app/employee/employee.module.ts","./src/app/_model/employe.ts","./src/app/employee/list-employee/list-employee.component.ts","./src/app/employee/list-employee/list-employee.component.html"],"names":[],"mappings":"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","file":"employee-employee-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { ListEmployeeComponent } from './list-employee/list-employee.component';\n\nexport const EmployeeRoutes: Routes = [{\n  path: '',\n  redirectTo: 'view',\n  pathMatch: 'full',\n}, {\n  path: '',\n  children: [{\n    path: 'view',\n    component: ListEmployeeComponent\n  }, {\n    path: 'add',\n    component: AddEmployeeComponent\n  }]\n}];\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment as env } from '../../environments/environment';\n \nimport { Employe } from '../_model/employe';\n\nimport { Observable } from 'rxjs';\n@Injectable({\n    providedIn: 'root'\n  })\nexport class EmployeService {\n  constructor(private http: HttpClient) { }\n\n  getPets(): Observable<Employe[]> {\n    const uri = `${env.api_host}/api/employe/all`;\n    return this.http.get<Employe[]>(uri);\n  }\n  public saveResource(resource: Employe) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<Employe>(env.api_host + '/api/employe/create', resource, httpOptions);\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmployeService } from 'app/service/employe.service';\nimport { Employe } from 'app/_model/employe';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.css']\n})\nexport class AddEmployeeComponent implements OnInit {\n\n  submitted = false;\n  employee=new Employe();\n    constructor(private employeService: EmployeService ,private router: Router) { }\n  \n    ngOnInit(): void {\n    }\n    create(): void {\n          \n       \n      this.employeService.saveResource(this.employee)\n        .subscribe(\n          response => {\n            console.log(response);\n            this.goToEmployeeList();\n          },\n          error => {\n            console.log(error);\n          });\n    }\n    goToEmployeeList(){\n      this.router.navigate(['/employes']);\n    }\n}\n","<p>add-employe works!</p>\n<div class=\"col-md-6 offset-md-3\">\n    <h3> Create Employee </h3>\n    <form (ngSubmit) = \"create()\">\n    \n        <div class=\"form-group\">\n            <label> First Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"firstName\"\n                [(ngModel)] = \"employee.firstname\" name = \"firstName\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Last Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"lastName\"\n                [(ngModel)] = \"employee.lastname\" name = \"lastName\">\n        </div>\n    \n     \n    \n        <button class = \"btn btn-success\" type =\"submit\">Submit</button>\n    \n    </form>\n    </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutes } from './employee-routing.module';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { ListEmployeeComponent } from './list-employee/list-employee.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\n\n\n\n@NgModule({\n  \n  imports: [\n    CommonModule,\n    FormsModule,\n    MatListModule,\n    MatIconModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    RouterModule.forChild(EmployeeRoutes),\n    \n  ],\n\n  declarations: [AddEmployeeComponent, ListEmployeeComponent]\n})\nexport class EmployeeModule { }\n","export class Employe {\n    id: number;\n    lastname: string;\n    firstname: string;\n    age: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeService } from 'app/service/employe.service';\nimport { Employe } from 'app/_model/employe';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-list-employee',\n  templateUrl: './list-employee.component.html',\n  styleUrls: ['./list-employee.component.css']\n})\nexport class ListEmployeeComponent implements OnInit {\n\n  employes: Employe[];\n  constructor(private store: EmployeService) { }\n\n  ngOnInit(): void {\n    const employe$ = this.store.getPets().pipe(\n      map(results => {\n        this.employes = results;\n        }),\n      catchError(error => {\n        console.log(error);\n        return of([]);\n      })\n    );\n    employe$.subscribe(data => data);\n  }\n\n\n}\n","<p>list-employe works!</p>\n \n\n \n<mat-card>\n\n    <mat-card-content>\n\n\n        <p class=\"font-weight-bold\">lists </p>\n        <mat-card>\n            <mat-list>\n                <table>\n                    <tr>\n                        <th> ID</th>\n                        <th> lastname</th>\n                        <th> firstname </th>\n                        <th> Age</th>\n                    </tr>\n                    <tr *ngFor=\"let employe of employes\">\n                        <td>{{employe.id}}</td>\n                        <td>{{employe.lastname}}</td>\n                        <td>{{employe.firstname}}</td>\n                        <td>{{employe.age}}</td>\n                    </tr>\n                \n                </table>\n            </mat-list>\n        </mat-card>\n    </mat-card-content>\n</mat-card>\n "],"sourceRoot":"webpack:///"}